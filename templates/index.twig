{% extends '_layout/_base.twig' %}

{% block main %}
        <div class="container">
        <div class="circle">
            <svg width="40" height="40">
                <circle cx="20" cy="20" r="20" ></circle>
            </svg>
        </div>

            <div class="title-block">
                <h1>{{ homepage.websitetitle }}</h1>
            </div>

            <div class="text-block border-bottom">
                <p>{{ homepage.websiteinfo }}</p>
                <p class="secret-info"> not really secret information </p>
            </div>
        </div>

            {% set contentBlocks = craft.entries() %}
            {% set entries = contentBlocks.all() %}
            {% for entry in entries %}
          
            <div class="img-block {{ entry.backgroundcolor }}" id="{{ entry.title }}">
           
                <h2>{{ entry.title }}</h2>
                 <p>{{ entry.subtitle }}</p>
             
                    <div class="images">
                      {% set blocks = entry.artblock.all() %}
                        {% if blocks is not empty %}
                            
                            {% for block in blocks %}
                                <figure>
                               {% for image in block.image %}
                                    <img src="{{ image.url }}" alt="{{ image.alt }}" />
                                {% endfor %}
                                {% if block.imgTitle is not empty %}
                                    <figcaption class="overlay">
                                        <div class="text">
                                            <h3>{{ block.imgTitle }}</h3>
                                            <p>{{ block.subtitle }}</p>
                                        </div>
                                    </figcaption>
                                {% endif %}
                                </figure>
                                 {% endfor %}
                           {% endif %} 
                    </div>
            </div>
            {% endfor %}

    {# gsap animatie #}

    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>

    <script>
        let circle = document.querySelector(".circle");

        let lightBackground = document.querySelector(".light-background");
        let darkBackground = document.querySelector(".dark-background"); 

            lightBackground.addEventListener('mouseenter', function(){
                circle.style.border = '2px solid rgba(8, 1, 21)'
            });

            lightBackground.addEventListener('mouseleave', function(){
                circle.style.border = '2px solid #f8f5eb'
            });


            darkBackground.addEventListener('mouseenter', function(){
                circle.style.border = '2px solid #f8f5eb'
            });

            darkBackground.addEventListener('mouseleave', function(){
                circle.style.border = '2px solid rgba(8, 1, 21)'
            });

        TweenLite.set(circle, {
        xPercent: -50,
        yPercent: -50
        });

        window.addEventListener("mousemove", moveCircle);

        function moveCircle(e) {
            TweenLite.to(circle, 0.3, {
                x: e.clientX,
                y: e.clientY
            });
        }
        
        gsap.from("h1", {
            duration:2,
            ease: "power1.inOut",
            x: -1000,
            });

        gsap.from(".text-block", {
            duration:2,
            ease: "power1.inOut",
            x: 1000,
            });

        gsap.registerPlugin(ScrollTrigger);

        ScrollTrigger.batch("figure", {
            onEnter: batch => {
                gsap.from(batch, { y: 75, stagger: .5})
                },
            onEnterBack: batch => {
                gsap.from(batch, {y: 75, stagger: .5})
                },
            });
        
        gsap.utils.toArray("figure").forEach(el => {
        let items = el.querySelectorAll(".overlay");
            if (items.length > 0) {
                let animation = gsap.from(items, {
                    duration: .5,
                    ease: "none",
                    width: "100%"
                });
                el.addEventListener("mouseover", () => animation.reverse());
                el.addEventListener("mouseout", () => animation.play());
            }
});

    </script>
            
{% endblock %}